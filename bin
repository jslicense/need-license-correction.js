#!/usr/bin/env node
var correctLicenseMetadata = require('correct-license-metadata')
var mostDependedUpon = require('./most-depended-upon')
var packageJSON = require('package-json')
var runParallelLimit = require('run-parallel-limit')
var spdxExpressionValidate = require('spdx-expression-validate')

var options = {
  allVersions: true,
  fullMetadata: true
}

var PARALLELISM = 10

runParallelLimit(
  mostDependedUpon.map(function (name) {
    return function (done) {
      packageJSON(name, options)
        .then(function (results) {
          var versions = results.versions
          Object.keys(versions).forEach(function (version) {
            var metadata = versions[version]
            var license = metadata.license
            var nameAndVersion = name + ',' + version
            if (correctLicenseMetadata(metadata)) return done()
            if (Array.isArray(metadata.licenses)) {
              console.log(nameAndVersion + ',licenses is array,' + JSON.stringify(licenses))
            } else if (Array.isArray(license)) {
              console.log(nameAndVersion + ',license is array,' + JSON.stringify(licenses))
            } else if (!license) {
              console.log(nameAndVersion + ',no license property')
            } else if (typeof license !== 'string') {
              console.log(nameAndVersion + ',license not a string,' + JSON.stringify(license))
            } else if (!spdxExpressionValidate(license)) {
              console.log(nameAndVersion + ',invalid expression,' + JSON.stringify(license))
            }
            done()
          })
        })
    }
  }),
  PARALLELISM
)
